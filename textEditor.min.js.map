{"version":3,"sources":["textEditor.js"],"names":["global","factory","exports","module","define","amd","textEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","getNowFormatDate","date","Date","month","getMonth","strDate","getDate","getFullYear","getHours","getMinutes","getSeconds","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","config","colors","map","color","BackColor","Quote","Code","Emoticon","Table","Video","Image$1","imgMenuId","Html","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","push","getAsFile","getChildrenJSON","childNodes","curElem","elemResult","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","UploadHtml","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","eventList","prototype","constructor","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","val","getAttribute","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","htmlFilterRules","htmlReplaceRules","origin","m","m1","cm1","textAlignClass","match","m2","span","cm2","htmlWrapper","content","title","emotions","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","str","langArgs","reg","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","Image","uploadHtml","exportBtn","htmlTitleInput","_htmlTitle","clearHtml","_insertedHtml","changeActive","exportHtml","txt","MenuConstructors","bold","head","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","flag","pasteTime","ex","pasteFiles","img","dataTransfer","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","execCommand","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","createEmptyRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","encodeURIComponent","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","filterHtml","rule","readAsText","aLink","blob","Blob","download","href","URL","createObjectURL","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","onfocus","onblur","isFocus","_initCommand","_initSelectionAPI","_initUploadImg","_initUploadHtml","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"textEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.textEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\r\n    poly-fill\r\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\r\n    DOM 操作 API\r\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\nvar htmlFilterRules = [/<meta [^<>]*>/g, /<[\\/]?span[^<>]*>/g, /<[\\/]?font[^<>]*>/g, /<[\\/]?div[^<>]*>/g, /<\\/(u[^a-zA-Z]?|b[^a-zA-Z]?)>[^<>]*<\\1[^<>]*>/g, /<\\/(u[^a-zA-Z]?|b[^a-zA-Z]?)>[^<>]*<\\1[^<>]*>/g];\n\nvar htmlReplaceRules = [{\n  origin: /<style>[\\s\\S]*<\\/style>/g,\n  replace: '<style>\\n  body {\\n    color:#333;\\n  }\\n  .article {\\n    padding: 20px 15px;\\n    font-size: 15px;\\n  }\\n  .article * {\\n    max-width: 100%;\\n    box-sizing: border-box;\\n    word-wrap: break-word;\\n  }\\n\\n  .article li {\\n    list-style: none;\\n    line-height: 1.5;\\n  }\\n\\n  .article .title {\\n    font-size: 20px;\\n    font-weight: bold;\\n  }\\n\\n  .article .big-title {\\n    font-size: 30px;\\n    text-align: center;\\n    margin: 150px 0;\\n  }\\n\\n  .article .big-gap {\\n    margin: 150px 0;\\n  }\\n\\n  .article .no-gap {\\n    margin: 0;\\n  }\\n\\n  .article section {\\n    margin-bottom: 1.5em;\\n  }\\n\\n  .article  .footer {\\n    float: right;\\n    margin-right: 50px;\\n  }\\n\\n  .article h1 {\\n    text-indent: 2em;\\n    font-size: 18px;\\n    font-weight: 400;\\n    margin-bottom: .9em;\\n  }\\n\\n  .article h2 {\\n    text-indent: 2em;\\n    font-size: 16px;\\n    font-weight: 400;\\n    margin-bottom: .34em;\\n  }\\n  .article h3 {\\n    text-indent: 2em;\\n    font-weight: 400;\\n    font-size: 15px;\\n    margin-bottom: .34em;\\n  }\\n  .article p {\\n    margin: 0 0 .8em;\\n    text-indent: 2em;\\n    line-height: 1.5;\\n  }\\n\\n  .article .center {\\n    text-indent: 0 !important;\\n    text-align: center;\\n  }\\n\\n  .article .left {\\n    text-indent: 0 !important;\\n    text-align: left;\\n  }\\n\\n  .article .right {\\n    text-align: right;\\n  }\\n\\n  .article  .red {\\n    color: red;\\n  }\\n\\n  .article table {\\n    border: 1px solid #000;\\n    width: 100%;\\n    margin: 0 auto;\\n    border-collapse: collapse;\\n  }\\n  .article table tr td {\\n    border: 1px solid #000;\\n    margin: 0;\\n    height: 20px;\\n  }\\n</style>\\n'\n}, {\n  origin: /<body[^<>]*?>([\\s\\S]*)<\\/body>/g,\n  replace: function replace(m, m1) {\n    return '<body>\\n<div class=\"article\">' + m1 + '</div>\\n</body>';\n  }\n}, {\n  origin: /<p( [^<>]+)>/g,\n  replace: function replace(m, m1) {\n    // 保留text-align，用class替代\n    return m.replace(m1, function (cm1) {\n      var textAlignClass = '';\n      if (cm1.match(/text-align:right/)) {\n        textAlignClass = ' class=\"right\"';\n      }\n      if (cm1.match(/text-align:center/)) {\n        textAlignClass = ' class=\"center\"';\n      }\n      return textAlignClass;\n    });\n  }\n}, {\n  origin: /<u [^<>]+>/g,\n  replace: '<u>'\n}, {\n  origin: /<b [^<>]+>/g,\n  replace: '<b>'\n}, {\n  origin: /<tbody [^<>]+>/g,\n  replace: '<tbody>'\n}, {\n  origin: /<table [^<>]+>/g,\n  replace: '<table>'\n}, {\n  origin: /<tr [^<>]+>/g,\n  replace: '<tr>'\n}, {\n  origin: /<td([^<>]*)>([\\s\\S]*?)<\\/td>/g,\n  replace: function replace(m, m1, m2) {\n    return m.replace(m1, function (cm1) {\n      var span = cm1.match(/( (rowspan|colspan)=['\"]?\\d+['\"]?)/);\n      return span && span[0] || '';\n    }).replace(m2, function (cm2) {\n      return cm2.replace(/<[\\/]?p[^<>]*>/g, '');\n    });\n  }\n}, {\n  origin: /<th([^<>]*)>([^(th)]*)<\\/th>/g,\n  replace: function replace(m, m1, m2) {\n    return m.replace(m1, function (cm1) {\n      var span = cm1.match(/( (rowspan|colspan)=['\"]?\\d+['\"]?)/);\n      return span && span[0] || '';\n    }).replace(m2, function (cm2) {\n      return cm2.replace(/<[\\/]?p[^<>]*>/g, '');\n    });\n  }\n},\n// 换占位的空白字符，去除行间距\n{\n  origin: /<p>&nbsp;<\\/p>/g,\n  replace: '<p class=\"no-gap\">&nbsp;</p>'\n}, {\n  origin: />[\\s]?['\"]?([\\d\\.]+)[^ \\d\\.]/g,\n  replace: function replace(m, m1) {\n    return m.replace(m1, m1 + ' ');\n  }\n}];\n\nvar htmlWrapper = function htmlWrapper(content, title) {\n  return content.replace(/(<style>[\\s\\S]*<\\/style>)([\\s\\S]+)/, function (m, m1, m2) {\n    return '\\n<!DOCTYPE html>\\n<html lang=\"en\">\\n\\n<head>\\n  <meta charset=\"UTF-8\" />\\n  <meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi\" />\\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\\n  <title>\\u300A' + title + '\\u300B</title>\\n  ' + m1 + '\\n</head>\\n<body>\\n' + m2 + '\\n</body>\\n</html>\\n';\n  }).replace(/(\\n|\\r\\n|\\r)\\1+/g, '$1');\n};\n\n/*\r\n    配置信息\r\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'html', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }, {\n            alt: '[允悲]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/2c/moren_yunbei_org.png'\n        }, {\n            alt: '[笑而不语]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3a/moren_xiaoerbuyu_org.png'\n        }, {\n            alt: '[费解]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/moren_feijie_org.png'\n        }, {\n            alt: '[憧憬]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/37/moren_chongjing_org.png'\n        }, {\n            alt: '[并不简单]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/fc/moren_bbjdnew_org.png'\n        }, {\n            alt: '[微笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/5c/huanglianwx_org.gif'\n        }, {\n            alt: '[酷]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/8a/pcmoren_cool2017_org.png'\n        }, {\n            alt: '[嘻嘻]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/0b/tootha_org.gif'\n        }, {\n            alt: '[哈哈]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6a/laugh.gif'\n        }, {\n            alt: '[可爱]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/14/tza_org.gif'\n        }, {\n            alt: '[可怜]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/af/kl_org.gif'\n        }, {\n            alt: '[挖鼻]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/0b/wabi_org.gif'\n        }, {\n            alt: '[吃惊]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/f4/cj_org.gif'\n        }, {\n            alt: '[害羞]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/shamea_org.gif'\n        }, {\n            alt: '[挤眼]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/c3/zy_org.gif'\n        }, {\n            alt: '[闭嘴]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/29/bz_org.gif'\n        }, {\n            alt: '[鄙视]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/71/bs2_org.gif'\n        }, {\n            alt: '[爱你]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6d/lovea_org.gif'\n        }, {\n            alt: '[泪]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/9d/sada_org.gif'\n        }, {\n            alt: '[偷笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/19/heia_org.gif'\n        }, {\n            alt: '[亲亲]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/8f/qq_org.gif'\n        }, {\n            alt: '[生病]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/b6/sb_org.gif'\n        }, {\n            alt: '[太开心]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/58/mb_org.gif'\n        }, {\n            alt: '[白眼]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d9/landeln_org.gif'\n        }, {\n            alt: '[右哼哼]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/98/yhh_org.gif'\n        }, {\n            alt: '[左哼哼]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6d/zhh_org.gif'\n        }, {\n            alt: '[嘘]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/a6/x_org.gif'\n        }, {\n            alt: '[衰]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/af/cry.gif'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/c9/geili_thumb.gif',\n            alt: '[给力]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/f2/wg_thumb.gif',\n            alt: '[围观]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/70/vw_thumb.gif',\n            alt: '[威武]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/6e/panda_thumb.gif',\n            alt: '[熊猫]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/81/rabbit_thumb.gif',\n            alt: '[兔子]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/otm_thumb.gif',\n            alt: '[奥特曼]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/15/j_thumb.gif',\n            alt: '[囧]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/89/hufen_thumb.gif',\n            alt: '[互粉]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/c4/liwu_thumb.gif',\n            alt: '[礼物]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false,\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n\n    // word html过滤规则\n    htmlFilterRules: htmlFilterRules,\n    // word html替换规则\n    htmlReplaceRules: htmlReplaceRules,\n    // html包装\n    htmlWrapper: htmlWrapper\n};\n\n/*\r\n    工具\r\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n\n// 获取标准格式时间\nfunction getNowFormatDate() {\n    var date = new Date();\n    var seperator1 = '-';\n    var seperator2 = ':';\n    var month = date.getMonth() + 1;\n    var strDate = date.getDate();\n    if (month >= 1 && month <= 9) {\n        month = '0' + month;\n    }\n    if (strDate >= 0 && strDate <= 9) {\n        strDate = '0' + strDate;\n    }\n    var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + ' ' + date.getHours() + seperator2 + date.getMinutes() + seperator2 + date.getSeconds();\n    return currentdate;\n}\n\n/*\r\n    bold-menu\r\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            // editor.selection.createEmptyRange()\n            // chenlongde 为空不需要操作，避免空标签\n            return;\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n        // chenlongde 用strong标签替换b\n        /*         const selectionText = editor.selection.getSelectionText()\r\n                if (this._active) {\r\n                    editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>')\r\n                } else {\r\n                    editor.cmd.do('insertHTML', '<strong>' + selectionText + '</strong>')\r\n                } */\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    替换多语言\r\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\r\n    droplist\r\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\r\n    menu - header\r\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    panel\r\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\r\n    menu - link\r\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    italic-menu\r\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            // editor.selection.createEmptyRange()\n            // chenlongde 为空不需要操作，避免空标签\n            return;\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    redo-menu\r\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\r\n    strikeThrough-menu\r\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            // editor.selection.createEmptyRange()\n            // chenlongde 为空不需要操作，避免空标签\n            return;\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    underline-menu\r\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            // editor.selection.createEmptyRange()\n            // chenlongde 为空不需要操作，避免空标签\n            return;\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    undo-menu\r\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\r\n    menu - list\r\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - justify\r\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\r\n    menu - Forecolor\r\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\r\n    menu - BackColor\r\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\r\n    menu - quote\r\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - code\r\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - emoticon\r\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\r\n    menu - table\r\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table>';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - video\r\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\r\n    menu - img\r\n*/\n// 构造函数\nfunction Image$1(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"><i/></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage$1.prototype = {\n    constructor: Image$1,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - img\r\n*/\n// 构造函数\nfunction Html(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-html\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nHtml.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var uploadHtml = editor.uploadHtml;\n\n        // id\n        var delBtn = getRandom('del-btn');\n        var exportBtn = getRandom('export-btn');\n        var htmlTitleInput = getRandom('html-title-input');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '删除 && 导出协议',\n            tpl: '<div>\\n                    <div class=\"w-e-input-container\"><label>\\u534F\\u8BAE\\u6807\\u9898\\uFF1A</label><input id=\"' + htmlTitleInput + '\" value=\"' + (this._htmlTitle || '') + '\"/></div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + exportBtn + '\" class=\"gray left\">\\u5BFC\\u51FAHTML\\u7248\\u672C\\u534F\\u8BAE</button>\\n                        <button id=\"' + delBtn + '\" class=\"red left\">\\u6E05\\u7A7AHtml\\u534F\\u8BAE</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    uploadHtml.clearHtml();\n                    editor._insertedHtml = false;\n                    editor.menus.changeActive();\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + exportBtn,\n                type: 'click',\n                fn: function fn() {\n                    uploadHtml.exportHtml(editor.txt.html(), _this._htmlTitle);\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + htmlTitleInput,\n                type: 'input',\n                fn: function fn(e) {\n                    _this._htmlTitle = e.target.value;\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return false;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var _this2 = this;\n\n        var editor = this.editor;\n        var uploadHtml = editor.uploadHtml;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传协议',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" accept=\"text/html\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择文件\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        _this2._htmlTitle = uploadHtml.uploadHtml(fileList[0]);\n                    }\n                    editor._insertedHtml = true;\n                    editor.menus.changeActive();\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }]; // tabs end\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 400,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._insertedHtml) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    所有菜单的汇总\r\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image$1;\n\nMenuConstructors.html = Html;\n\n/*\r\n    菜单集合\r\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\r\n    粘贴信息的处理\r\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").+?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\r\n    编辑区域\r\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.html();\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.text();\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 500) {\n                // 间隔大于 500 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            // 自定义处理粘贴的内容\n            if (pasteTextHandle && typeof pasteTextHandle === 'function') {\n                pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                pasteText = '' + (pasteTextHandle(pasteText) || '');\n            }\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\r\n    命令，封装 document.execCommand\r\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\r\n    selection range API\r\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\r\n    上传进度条\r\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\r\n    上传图片\r\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('textEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'textEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                val = encodeURIComponent(val);\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\r\n    上传图片\r\n*/\n\n// 构造函数\nfunction UploadHtml(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadHtml.prototype = {\n    constructor: UploadHtml,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('textEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertHtml: function insertHtml(content) {\n        if (!content) {\n            return;\n        }\n\n        var editor = this.editor;\n        var config = editor.config;\n\n        editor.txt.html(this.filterHtml(content));\n    },\n    // 过滤html中的无用样式\n    filterHtml: function filterHtml(content) {\n        var str = content;\n        var editor = this.editor;\n        var config = editor.config;\n        var htmlFilterRules = config.htmlFilterRules;\n        var htmlReplaceRules = config.htmlReplaceRules;\n        arrForEach(htmlFilterRules, function (rule) {\n            str = str.replace(rule, '');\n        });\n        arrForEach(htmlReplaceRules, function (rule) {\n            str = str.replace(rule.origin, rule.replace);\n        });\n        return str;\n    },\n\n    // 上传协议\n    uploadHtml: function uploadHtml(file) {\n        var _this = this;\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var uploadFileName = config.uploadFileName || '';\n        var hooks = config.uploadImgHooks || {};\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var errInfo = [];\n        var name = file.name;\n        var size = file.size;\n\n        if (/\\.(html|htm)$/i.test(name) === false) {\n            // 后缀名不合法，不是Html\n            errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662FHtml');\n        }\n        if (maxSize < size) {\n            // 上传Html过大\n            errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n        }\n\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('Html验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n\n        // ------------------------------ 读取文件内容 ------------------------------\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            var content = e.target.result;\n            _this.insertHtml(content);\n        };\n        reader.readAsText(file);\n\n        // ------------------------------ 默认标题 ------------------------------\n        return name.replace(/\\.(html|htm)$/i, '');\n    },\n    // 清空html\n    clearHtml: function clearHtml() {\n        var editor = this.editor;\n        editor.txt.clear();\n    },\n    // 导出Html\n    exportHtml: function exportHtml(content, title) {\n        var editor = this.editor;\n        var config = editor.config;\n        var aLink = document.createElement('a');\n        var blob = new Blob([config.htmlWrapper(content, title)]);\n        aLink.download = 'protocol-' + getNowFormatDate() + '.html';\n        aLink.href = URL.createObjectURL(blob);\n        aLink.click();\n        this._alert('浏览器开始下载...');\n    }\n};\n\n/*\r\n    编辑器构造函数\r\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'textEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '600px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $toolbarSelector.isContain($(e.target));\n\n                if (!isChild) {\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 添加协议上传\n    _initUploadHtml: function _initUploadHtml() {\n        this.uploadHtml = new UploadHtml(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 添加 图片上传\n        this._initUploadHtml();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-html:before {  content: \"HTML\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-input-container {  padding: 5px 10px;  font-size: 14px;  color: #999;  border-bottom: 1px solid #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-input-container input {  width: 160px;  color: #333;  border: 0;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.textEditor || Editor;\n\nreturn index;\n\n})));\n"]}